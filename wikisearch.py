from .. import loader, utils
import wikipedia
import logging

# meta developer: @kmodules
__version__ = (1, 0, 0)

@loader.tds
class WikiSearchMod(loader.Module):
    """–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏"""

    strings = {
        "name": "WikiSearch",
        "no_args": "Please specify search query",
        "no_result": "Nothing found for this query",
        "header": "<b>[</b><emoji document_id=5122983123188974322>üëÅ</emoji><b>] Wikipedia - Search</b>\n\n",
        "searching": "<emoji document_id=5116414868357907335>üî•</emoji> <b>–ò—â—É –≤ Wikipedia...</b>"
    }
    
    strings_ru = {
        "name": "WikiSearch", 
        "no_args": "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å",
        "no_result": "–ü–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
        "header": "<b>[</b><emoji document_id=5122983123188974322>üëÅ</emoji><b>] Wikipedia - Search</b>\n\n",
        "searching": "<emoji document_id=5116414868357907335>üî•</emoji> <b>–ò—â—É –≤ Wikipedia...</b>"
    }

    async def client_ready(self, client, db):
        self.client = client
        
    @loader.command()
    async def wksearch(self, message):
        """–ü–æ–∏—Å–∫ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏ - .wksearch <–∑–∞–ø—Ä–æ—Å>"""
        args = utils.get_args_raw(message)
        
        if not args:
            await utils.answer(message, self.strings["no_args"])
            return

        await utils.answer(message, self.strings["searching"])

        try:
            wikipedia.set_lang('ru')
            result = wikipedia.summary(args, sentences=10)
            
            await utils.answer(
                message,
                self.strings["header"] + f"<b>{result}</b>"
            )
            
        except wikipedia.exceptions.DisambiguationError:
            await utils.answer(message, self.strings["no_result"])
        except wikipedia.exceptions.PageError:
            await utils.answer(message, self.strings["no_result"])
        except Exception as e:
            logging.exception(e)
            await utils.answer(message, self.strings["no_result"])
          
