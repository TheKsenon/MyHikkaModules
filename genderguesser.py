from .. import loader, utils
import requests

__version__ = (1, 0, 0)
# meta developer: @kmodules

male = "<emoji document_id=5999325196543071034>üñ§</emoji>"
female = "<emoji document_id=5996979985485665124>‚ù§Ô∏è‚Äçüî•</emoji>"
unknown = "<emoji document_id=5996716235838985244>ü©µ</emoji>"

@loader.tds
class GenderGuesserMod(loader.Module):
    """–£–∑–Ω–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—ã–π –≥–µ–Ω–¥–µ–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    strings = {
        "name": "GenderGuesser",
        "thinking": "<emoji document_id=5307675706283533118>ü´•</emoji> <b>–î—É–º–∞—é –æ –≥–µ–Ω–¥–µ—Ä–µ {}</b>...",
        "result": "<emoji document_id=5879770735999717115>üë§</emoji> <b>–ü—Ä–∏–º–µ—Ä–Ω—ã–π –≥–µ–Ω–¥–µ—Ä {}</b>:\n\n{} <b>{}</b>",
        "need_args": "<b>–£–∫–∞–∂–∏—Ç–µ –∏–º—è</b>"
    }

    strings_ru = {
        "name": "GenderGuesser",
        "thinking": "<emoji document_id=5307675706283533118>ü´•</emoji> <b>–î—É–º–∞—é –æ –≥–µ–Ω–¥–µ—Ä–µ {}</b>...", 
        "result": "<emoji document_id=5879770735999717115>üë§</emoji> <b>–ü—Ä–∏–º–µ—Ä–Ω—ã–π –≥–µ–Ω–¥–µ—Ä {}</b>:\n\n{} <b>{}</b>",
        "need_args": "<b>–£–∫–∞–∂–∏—Ç–µ –∏–º—è</b>"
    }
    



    @loader.command()
    async def gender(self, message):
        """–ü—Ä–∏–º–µ—Ä–Ω—ã–π –≥–µ–Ω–¥–µ—Ä –ø–æ username/reply
        –ü—Ä–∏–º–µ—Ä: .gender @username or reply"""
        reply = await message.get_reply_message()
        args = utils.get_args_raw(message)
        
        if not reply and not args:
            return await message.edit("<b>‚ùó –ù—É–∂–µ–Ω —é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ —Ä–µ–ø–ª–∏!</b>")
            
        if reply:
            user = await reply.get_sender()
            name = user.first_name
        else:
            user = await self._client.get_entity(args)
            name = user.first_name
            
        await message.edit(self.strings["thinking"].format(name))
        
        response = requests.get(f"https://api.genderize.io?name={name}")
        result = response.json()
        
        if result["gender"] == "female":
            emoji = female
            gender = "–ñ–µ–Ω—â–∏–Ω–∞"
        elif result["gender"] == "male":
            emoji = male
            gender = "–ú—É–∂—á–∏–Ω–∞"
        else:
            emoji = unknown
            gender = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
        await message.edit(
            self.strings["result"].format(
                name,
                emoji,
                gender
            )
        )

    @loader.command()
    async def gendername(self, message):
        """–ü—Ä–∏–º–µ—Ä–Ω—ã–π –≥–µ–Ω–¥–µ—Ä –ø–æ –∏–º–µ–Ω–∏.
        –ü—Ä–∏–º–µ—Ä: .gendername –ú–∞–∫—Å–∏–º"""
        args = utils.get_args_raw(message)
        
        if not args:
            return await message.edit(self.strings["need_args"])
            
        await message.edit(self.strings["thinking"].format(args))
        
        response = requests.get(f"https://api.genderize.io?name={args}")
        result = response.json()
        
        if result["gender"] == "female":
            emoji = female
            gender = "–ñ–µ–Ω—â–∏–Ω–∞"
        elif result["gender"] == "male":
            emoji = male
            gender = "–ú—É–∂—á–∏–Ω–∞"
        else:
            emoji = unknown
            gender = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
        await message.edit(
            self.strings["result"].format(
                args,
                emoji,
                gender
            )
        )
      
